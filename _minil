#compdef minil

# The MIT License (MIT)
#
# Copyright (c) 2016 Syohei YOSHIDA
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

typeset -A opt_args
local context state line

local -a _minil_subcommands
_minil_subcommands=(
  'new:Create a new dist'
  'build:Build distribution'
  'test:Run test cases'
  'clean:Clean up directory'
  'dist:Make dist tarball'
  'install:Install distribution'
  'release:Release distribution to CPAN'
  'migrate:Migrate existed distribution repo'
  'run:Run arbitrary commands'
  'help:Help me'
)

_arguments '*:: :->subcmd'

if [[ "$state" == "subcmd" ]];then

  if (( CURRENT == 1)); then
    _describe -t commands "minil command" _minil_subcommands -V1
    return
  else
    local opts curcontext

    case "$words[1]" in
      new)
        opts=(
          '(--username)--username[Specifies Username]:username:'
          '(--email)--email[Specifies Email Address]:email:'
          '(-p|--profile)'{-p,--profile}'[Minilla profile]:profiles:(XS)'
        )
        ;;
      clean)
        opts=('(-y)-y[delete files without asking]')
        ;;
      install)
        opts=('--no-test[Do not run test]')
        ;;
      release)
        opts=(
          '--no-test[Do not run test]'
          '--trial[Trial release]'
          '--dry-run[Dry run mode]'
          '--pause-config=[Path to a CPAN::Uploader configuration file]:file:_files'
        )
        ;;
      test)
        opts=(
          '--release[enable the RELEASE_TESTING env variable]'
          '--automated[enable the AUTOMATED_TESTING env variable]'
          '--author[enable the AUTHOR_TESTING env variable]'
          '--all[enable the All env variables]'
        )
        ;;
      run)
        opts=()
        _arguments -s : "$opts[@]" '*::arguments:_normal'
        return 0
        ;;
      help)
        local -a subcommands
        subcommands=(new build test clean dist install release migrate help)
        _arguments -s : "()"'*: :'"($subcommands)"
        return 0
        ;;
      *)
        opts=()
        ;;
    esac
    _arguments -s : "$opts[@]" '*::Files:_files'
  fi
fi

# Local Variables:
# mode: Shell-Script
# sh-indentation: 2
# indent-tabs-mode: nil
# sh-basic-offset: 2
# End:
# vim: ft=zsh sw=2 ts=2 et
