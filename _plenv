#compdef plenv

# The MIT License (MIT)
#
# Copyright (c) 2016 Syohei YOSHIDA
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

typeset -A opt_args
local context state line

local -a _plenv_subcommands
_plenv_subcommands=(
  "available:Show available Perl5 versions from CPAN"
  "exec:Execute command under Perl5"
  "global:Set or show the global Perl version"
  "help:Show help message"
  "init:Initialize"
  "install:Install Perl5 into ~/.plenv/"
  "install-cpanm:Install cpanm to current Perl"
  "list:Show list of installed Perl5 versions"
  "list-modules:Show installed module list from current perl"
  "local:Set or show the local application-specific Perl version"
  "migrate-modules:Migrate CPAN modules from other Perl installation"
  "rehash:Rehash shims"
  "version:Show the current Perl version and its origin"
  "versions:Alias for 'plenv list'"
  "which:Locate a program file in the plenv's path"
)

_arguments '*:: :->subcmd'

if [[ "$state" == "subcmd" ]];then

  if (( CURRENT == 1 )); then
    _describe -t commands "plenv command" _plenv_subcommands -V1
    return
  else
    local opts curcontext

    case "$words[1]" in
      local | global | migrate-modules)
        local -a installed_versions
        installed_versions=($(plenv list | perl -pe 's{[ *] }{}'))
        _wanted installed_versions expl 'perl-<version-number>' \
          compadd $installed_versions && return 0
        ;;
      install)
        local -a perl_versions
        perl_versions=($(plenv available | perl -pe 's/perl-?//'))
        _wanted perl_versions expl 'perl-<version-number>' \
          compadd $perl_versions && return 0
        ;;
      exec)
        opts=()
        _arguments -s : "$opts[@]" '*:normal:_normal'
        ;;
      *)
        opts=()
        _arguments -s : "$opts[@]" '*:Files:_files'
        ;;
    esac
  fi
fi

# Local Variables:
# mode: Shell-Script
# sh-indentation: 2
# indent-tabs-mode: nil
# sh-basic-offset: 2
# End:
# vim: ft=zsh sw=2 ts=2 et
