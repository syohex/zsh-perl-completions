#compdef ph

# The MIT License (MIT)
#
# Copyright (c) 2022 Shohei YOSHIDA
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

typeset -A opt_args
local context state line

local -a _ph_subcommands
_ph_subcommands=(
  'import:Import current directory to github'
  'clone:Clone repository'
  'fork:Fork the repository to my github account'
  'pull:Fetch remote changes'
  'pullreq:Pull request'
  'add:Add remote reposity and fetch'
  'info:Display information of repository'
  'all:Clone all repository in my account'
  'issues:Show list of current project'
  'help:Show this message'
)

_arguments '*:: :->subcmd'

if [[ "$state" == "subcmd" ]];then

  if (( CURRENT == 1)); then
    _describe -t commands "ph command" _ph_subcommands -V1
    return
  else
    local opts curcontext

    case "$words[1]" in
      clone)
        opts=('--fork[fork repository]')
        ;;
      import)
        opts=(
          '--remote=[Remote repository]'
          '--homepage=[Repository homepage]'
          '--description=[Repositry description]'
          '--private[Import as private]'
        )
        ;;
      *)
        opts=()
        ;;
    esac
    _arguments -n : "$opts[@]" '*: :()'
  fi
fi

# Local Variables:
# mode: Shell-Script
# sh-indentation: 2
# indent-tabs-mode: nil
# sh-basic-offset: 2
# End:
# vim: ft=zsh sw=2 ts=2 et
